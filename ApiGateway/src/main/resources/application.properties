spring.application.name=ApiGateway
server.port=8082
eureka.client.service-url.defaultZone=http://localhost:8010/eureka

eureka.instance.prefer-ip-address=true
eureka.instance.hostname=localhost

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#spring.cloud.gateway.discovery.locator.enabled=true
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true

token.secret=hfgry463hf746hf573ydh475fhy5739hfgry463hf746hf573ydh475fhy5739hfgry463hf746hf573ydh475fhy5739

spring.cloud.gateway.routes[0].id=users-status-check
spring.cloud.gateway.routes[0].uri=lb://PhotoAppApiUsers
spring.cloud.gateway.routes[0].predicates[0]=Path=/PhotoAppApiUsers/users/status/check
spring.cloud.gateway.routes[0].predicates[1]=Method=GET
spring.cloud.gateway.routes[0].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[0].filters[1]=RewritePath=/PhotoAppApiUsers/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[0].filters[2]=AuthorizationHeaderFilter

spring.cloud.gateway.routes[1].id=account-status-check
spring.cloud.gateway.routes[1].uri=lb://PhotoAppApiAccountManagement
spring.cloud.gateway.routes[1].predicates[0]=Path=/PhotoAppApiAccountManagement/account/status/check
spring.cloud.gateway.routes[1].predicates[1]=Method=GET
spring.cloud.gateway.routes[1].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[1].filters[1]=RewritePath=/PhotoAppApiAccountManagement/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[2].id = PhotoAppApiUsers-h2-console
spring.cloud.gateway.routes[2].uri = lb://PhotoAppApiUsers
spring.cloud.gateway.routes[2].predicates[0]=Path=/PhotoAppApiUsers/h2-console
spring.cloud.gateway.routes[2].predicates[1]=Method=GET
spring.cloud.gateway.routes[2].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[2].filters[1]=RewritePath=/PhotoAppApiUsers/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[3].id = insert-user
spring.cloud.gateway.routes[3].uri = lb://PhotoAppApiUsers
spring.cloud.gateway.routes[3].predicates[0]=Path=/PhotoAppApiUsers/users/insert
spring.cloud.gateway.routes[3].predicates[1]=Method=POST
spring.cloud.gateway.routes[3].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[3].filters[1]=RewritePath=/PhotoAppApiUsers/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[4].id = users-ws-login
spring.cloud.gateway.routes[4].uri = lb://PhotoAppApiUsers
spring.cloud.gateway.routes[4].predicates[0]=Path=/PhotoAppApiUsers/users/login
spring.cloud.gateway.routes[4].predicates[1]=Method=POST
spring.cloud.gateway.routes[4].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[4].filters[1]=RewritePath=/PhotoAppApiUsers/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[5].id = users-ws-actuator
spring.cloud.gateway.routes[5].uri = lb://PhotoAppApiUsers
spring.cloud.gateway.routes[5].predicates[0]=Path=/PhotoAppApiUsers/actuator/**
spring.cloud.gateway.routes[5].predicates[1]=Method=GET
spring.cloud.gateway.routes[5].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[5].filters[1]=RewritePath=/PhotoAppApiUsers/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[6].id = get-users-ws
spring.cloud.gateway.routes[6].uri = lb://PhotoAppApiUsers
spring.cloud.gateway.routes[6].predicates[0]=Path=/PhotoAppApiUsers/users/fetch/**
spring.cloud.gateway.routes[6].predicates[1]=Method=GET
spring.cloud.gateway.routes[6].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[6].filters[1]=RewritePath=/PhotoAppApiUsers/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[7].id = users-ws-actuator
spring.cloud.gateway.routes[7].uri = lb://PhotoAppApiUsers
spring.cloud.gateway.routes[7].predicates[0]=Path=/PhotoAppApiUsers/actuator/**
spring.cloud.gateway.routes[7].predicates[1]=Method=GET
spring.cloud.gateway.routes[7].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[7].filters[1]=RewritePath=/PhotoAppApiUsers/(?<segment>.*), /$\{segment}

management.endpoint.gateway.enabled=true
management.endpoints.web.exposure.include=gateway,health,mappings